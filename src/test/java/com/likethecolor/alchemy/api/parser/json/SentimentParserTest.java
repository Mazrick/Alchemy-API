/**
 * File: SentimentParserTest.java
 *
 * Copyright 2012 Dan Brown <dan@likethecolor.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.likethecolor.alchemy.api.parser.json;

import com.likethecolor.alchemy.api.entity.SentimentAlchemyEntity;
import com.likethecolor.alchemy.api.entity.Response;
import com.likethecolor.alchemy.api.entity.SentimentAlchemyEntity;
import org.junit.Test;

import java.util.Iterator;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;

public class SentimentParserTest {
  private static final String LANGUAGE = "english";
  private static final String STATUS_STRING = "OK";
  private static final String TEXT = "this is some text";
  private static final String USAGE = "By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html";
  private static final String URL = "http://www.bartleby.com/124/pres32.html";
  private static final Double SCORE = 0.875415D;
  private static final SentimentAlchemyEntity.TYPE TYPE = SentimentAlchemyEntity.TYPE.NEGATIVE;

  @Test
  public void testParse() {
    final SentimentParser parser = new SentimentParser();
    final Response<SentimentAlchemyEntity> response = parser.parse(getJsonString());

    assertEquals(1, response.size());
    final Iterator<SentimentAlchemyEntity> iter = response.iterator();

    final SentimentAlchemyEntity entity = iter.next();

    assertFalse(entity.isMixed());
    assertEquals(SCORE, entity.getScore());
    assertEquals(TYPE, entity.getType());
  }

  private String getJsonString() {
    return "{" +
           "\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\","
           + "\"docSentiment\":"
           + "{"
           + "\"type\":\"negative\","
           + "\"score\":0.875415,"
           + "\"mixed\":0"
           + "}"
           + "}";
  }

  /**
   * JSON with 0 concepts
   */
  private String getJsonString_NoNamedEntity() {
    return "{\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\"}";
  }
}
