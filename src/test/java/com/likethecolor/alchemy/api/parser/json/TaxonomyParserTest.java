/**
 * File: TaxonomyParserTest.java
 *
 * Copyright 2012 Dan Brown <dan@likethecolor.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.likethecolor.alchemy.api.parser.json;

import com.likethecolor.alchemy.api.Constants;
import com.likethecolor.alchemy.api.entity.TaxonomyAlchemyEntity;
import com.likethecolor.alchemy.api.entity.Response;
import org.junit.Test;

import java.util.Iterator;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class TaxonomyParserTest {
  private static final String LANGUAGE = "english";
  private static final String STATUS_STRING = "OK";
  private static final String TEXT = "this is some text";
  private static final String USAGE = "By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html";
  private static final String URL = "http://www.bartleby.com/124/pres32.html";

  private static final boolean CONFIDENT = true;
  private static final String LABEL = "religion";
  private static final Double SCORE = 0.85D;

  @Test
  public void testParse() {
    final TaxonomyParser parser = new TaxonomyParser();
    final Response<TaxonomyAlchemyEntity> response = parser.parse(getJsonString());

    assertEquals(1, response.size());

    TaxonomyAlchemyEntity entity;
    final Iterator<TaxonomyAlchemyEntity> iter = response.iterator();
    entity = iter.next();
    assertEquals(CONFIDENT, entity.isConfident());
    assertEquals(LABEL, entity.getLabel());
    assertEquals(SCORE, entity.getScore());
  }

  @Test
  public void testParse_NoScore() {
    final TaxonomyParser parser = new TaxonomyParser();
    final Response<TaxonomyAlchemyEntity> response = parser.parse(getJsonStringNoScore());

    assertEquals(1, response.size());

    TaxonomyAlchemyEntity entity;
    final Iterator<TaxonomyAlchemyEntity> iter = response.iterator();
    entity = iter.next();
    assertEquals(CONFIDENT, entity.isConfident());
    assertEquals(LABEL, entity.getLabel());
    assertEquals(Constants.DEFAULT_SCORE, entity.getScore());
  }

  @Test
  public void testParse_NoLabel() {
    final TaxonomyParser parser = new TaxonomyParser();
    final Response<TaxonomyAlchemyEntity> response = parser.parse(getJsonStringNoLabel());

    assertEquals(1, response.size());

    TaxonomyAlchemyEntity entity;
    final Iterator<TaxonomyAlchemyEntity> iter = response.iterator();
    entity = iter.next();
    assertEquals(CONFIDENT, entity.isConfident());
    assertNull(entity.getLabel());
    assertEquals(SCORE, entity.getScore());
  }

  @Test
  public void testParse_NoConfidence() {
    final TaxonomyParser parser = new TaxonomyParser();
    final Response<TaxonomyAlchemyEntity> response = parser.parse(getJsonString_NoConfidence());

    assertEquals(1, response.size());

    TaxonomyAlchemyEntity entity;
    final Iterator<TaxonomyAlchemyEntity> iter = response.iterator();
    entity = iter.next();
    assertNull(entity.isConfident());
    assertEquals(LABEL, entity.getLabel());
    assertEquals(SCORE, entity.getScore());
  }

  @Test
  public void testParse_NullEmptyJsonString() {
    final TaxonomyParser parser = new TaxonomyParser();
    Response response = parser.parse(null);

    assertEquals(0, response.size());

    response = parser.parse("");

    assertEquals(0, response.size());

    response = parser.parse("\t  \r\n");

    assertEquals(0, response.size());
  }

  /**
   * Has confidence, label, and score.
   */
  private String getJsonString() {
    return "{\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\"," +
           "\"" + JSONConstants.TAXONOMY_CONFIDENCE_KEY + "\":" + CONFIDENT + "," +
           "\"" + JSONConstants.TAXONOMY_LABEL_KEY + "\":\"" + LABEL + "\"," +
           "\"" + JSONConstants.TAXONOMY_SCORE_KEY + "\":" + SCORE + "}";
  }

  /**
   * Has confidence, label, no score.
   */
  private String getJsonStringNoScore() {
    return "{\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\"," +
           "\"" + JSONConstants.TAXONOMY_CONFIDENCE_KEY + "\":" + CONFIDENT + "," +
           "\"" + JSONConstants.TAXONOMY_LABEL_KEY + "\":\"" + LABEL + "\"}";
  }

  /**
   * Has no confidence and score, no label.
   */
  private String getJsonStringNoLabel() {
    return "{\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\"," +
           "\"" + JSONConstants.TAXONOMY_CONFIDENCE_KEY + "\":" + CONFIDENT + "," +
           "\"" + JSONConstants.TAXONOMY_SCORE_KEY + "\":" + SCORE + "}";
  }

  /**
   * Has label and score, no confidence.
   */
  private String getJsonString_NoConfidence() {
    return "{\"" + JSONConstants.RESULTS_STATUS + "\":\"" + STATUS_STRING + "\"," +
           "\"" + JSONConstants.RESULTS_USAGE + "\": \"" + USAGE + "\"," +
           "\"" + JSONConstants.RESULTS_URL + "\": \"" + URL + "\"," +
           "\"" + JSONConstants.RESULTS_LANGUAGE + "\": \"" + LANGUAGE + "\"," +
           "\"" + JSONConstants.RESULTS_TEXT + "\": \"" + TEXT + "\"," +
           "\"" + JSONConstants.TAXONOMY_LABEL_KEY + "\":\"" + LABEL + "\"," +
           "\"" + JSONConstants.TAXONOMY_SCORE_KEY + "\":" + SCORE + "}";
  }
}
